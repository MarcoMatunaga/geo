#------------------------------------------------------------------------------+
#
#   Nathan A. Rooy
#   Composite Quadratic Bezier Curve Example (Airfoil)
#   2015-08-12
#
#------------------------------------------------------------------------------+

#--- IMPORT DEPENDENCIES ------------------------------------------------------+

from __future__ import division
import numpy as np

#--- MAIN ---------------------------------------------------------------------+

def quadraticBezier(t,points):
    B_x=(1-t)*((1-t)*points[0][0]+t*points[1][0])+t*((1-t)*points[1][0]+t*points[2][0])
    B_y=(1-t)*((1-t)*points[0][1]+t*points[1][1])+t*((1-t)*points[1][1]+t*points[2][1])
    return B_x,B_y

def airfoil(ctlPts,numPts,write):
    curve=[]
    t=np.array([i*1/numPts for i in range(0,numPts)])
    
    # calculate first Bezier curve
    midX=(ctlPts[1][0]+ctlPts[2][0])/2
    midY=(ctlPts[1][1]+ctlPts[2][1])/2
    B_x,B_y=quadraticBezier(t,[ctlPts[0],ctlPts[1],[midX,midY]])
    curve=curve+list(zip(B_x,B_y))

    # calculate middle Bezier Curves
    for i in range(1,len(ctlPts)-3):
        p0=ctlPts[i]
        p1=ctlPts[i+1]
        p2=ctlPts[i+2]
        midX_1=(ctlPts[i][0]+ctlPts[i+1][0])/2
        midY_1=(ctlPts[i][1]+ctlPts[i+1][1])/2
        midX_2=(ctlPts[i+1][0]+ctlPts[i+2][0])/2
        midY_2=(ctlPts[i+1][1]+ctlPts[i+2][1])/2

        B_x,B_y=quadraticBezier(t,[[midX_1,midY_1],ctlPts[i+1],[midX_2,midY_2]])
        curve=curve+list(zip(B_x,B_y))                      
   
    # calculate last Bezier curve
    midX=(ctlPts[-3][0]+ctlPts[-2][0])/2
    midY=(ctlPts[-3][1]+ctlPts[-2][1])/2

    B_x,B_y=quadraticBezier(t,[[midX,midY],ctlPts[-2],ctlPts[-1]])
    curve=curve+list(zip(B_x,B_y))
    curve.append(ctlPts[-1])

    # write airfoil coordinates to text file
    if write:
        xPts,yPts=zip(*curve)
        f=open('airfoilCoords.txt','w')
        for i in range(len(xPts)):
            f.write(str(xPts[i])+','+str(yPts[i])+'\n')
        f.close()

    return curve

#--- 11 CONTROL POINT AIRFOIL EXAMPLE -----------------------------------------+


points = [[1.0000000, 0.0012600],
          [0.9994161, 0.0013419],
          [0.9976658, 0.0015870],
          [0.9947532, 0.0019938],
          [0.9906850, 0.0025595],
          [0.9854709, 0.0032804],
          [0.9791229, 0.0041519],
          [0.9716559, 0.0051685],
          [0.9630873, 0.0063238],
          [0.9534372, 0.0076108],
          [0.9427280, 0.0090217],
          [0.9309849, 0.0105485],
          [0.9182351, 0.0121823],
          [0.9045085, 0.0139143],
          [0.8898372, 0.0157351],
          [0.8742554, 0.0176353],
          [0.8577995, 0.0196051],
          [0.8405079, 0.0216347],
          [0.8224211, 0.0237142],
          [0.8035813, 0.0258337],
          [0.7840324, 0.0279828],
          [0.7638202, 0.0301515],
          [0.7429917, 0.0323294],
          [0.7215958, 0.0345058],
          [0.6996823, 0.0366700],
          [0.6773025, 0.0388109],
          [0.6545085, 0.0409174],
          [0.6313537, 0.0429778],
          [0.6078921, 0.0449802],
          [0.5841786, 0.0469124],
          [0.5602683, 0.0487619],
          [0.5362174, 0.0505161],
          [0.5120819, 0.0521620],
          [0.4879181, 0.0536866],
          [0.4637826, 0.0550769],
          [0.4397317, 0.0563200],
          [0.4158215, 0.0574033],
          [0.3921079, 0.0583145],
          [0.3686463, 0.0590419],
          [0.3454915, 0.0595747],
          [0.3226976, 0.0599028],
          [0.3003177, 0.0600172],
          [0.2784042, 0.0599102],
          [0.2570083, 0.0595755],
          [0.2361799, 0.0590081],
          [0.2159676, 0.0582048],
          [0.1964187, 0.0571640],
          [0.1775789, 0.0558856],
          [0.1594921, 0.0543715],
          [0.1422005, 0.0526251],
          [0.1257446, 0.0506513],
          [0.1101628, 0.0484567],
          [0.0954915, 0.0460489],
          [0.0817649, 0.0434371],
          [0.0690152, 0.0406310],
          [0.0572720, 0.0376414],
          [0.0465628, 0.0344792],
          [0.0369127, 0.0311559],
          [0.0283441, 0.0276827],
          [0.0208771, 0.0240706],
          [0.0145291, 0.0203300],
          [0.0093149, 0.0164706],
          [0.0052468, 0.0125011],
          [0.0023342, 0.0084289],
          [0.0005839, 0.0042603],
          [0.0000000, 0.0000000],
          [0.0005839, -.0042603],
          [0.0023342, -.0084289],
          [0.0052468, -.0125011],
          [0.0093149, -.0164706],
          [0.0145291, -.0203300],
          [0.0208771, -.0240706],
          [0.0283441, -.0276827],
          [0.0369127, -.0311559],
          [0.0465628, -.0344792],
          [0.0572720, -.0376414],
          [0.0690152, -.0406310],
          [0.0817649, -.0434371],
          [0.0954915, -.0460489],
          [0.1101628, -.0484567],
          [0.1257446, -.0506513],
          [0.1422005, -.0526251],
          [0.1594921, -.0543715],
          [0.1775789, -.0558856],
          [0.1964187, -.0571640],
          [0.2159676, -.0582048],
          [0.2361799, -.0590081],
          [0.2570083, -.0595755],
          [0.2784042, -.0599102],
          [0.3003177, -.0600172],
          [0.3226976, -.0599028],
          [0.3454915, -.0595747],
          [0.3686463, -.0590419],
          [0.3921079, -.0583145],
          [0.4158215, -.0574033],
          [0.4397317, -.0563200],
          [0.4637826, -.0550769],
          [0.4879181, -.0536866],
          [0.5120819, -.0521620],
          [0.5362174, -.0505161],
          [0.5602683, -.0487619],
          [0.5841786, -.0469124],
          [0.6078921, -.0449802],
          [0.6313537, -.0429778],
          [0.6545085, -.0409174],
          [0.6773025, -.0388109],
          [0.6996823, -.0366700],
          [0.7215958, -.0345058],
          [0.7429917, -.0323294],
          [0.7638202, -.0301515],
          [0.7840324, -.0279828],
          [0.8035813, -.0258337],
          [0.8224211, -.0237142],
          [0.8405079, -.0216347],
          [0.8577995, -.0196051],
          [0.8742554, -.0176353],
          [0.8898372, -.0157351],
          [0.9045085, -.0139143],
          [0.9182351, -.0121823],
          [0.9309849, -.0105485],
          [0.9427280, -.0090217],
          [0.9534372, -.0076108],
          [0.9630873, -.0063238],
          [0.9716559, -.0051685],
          [0.9791229, -.0041519],
          [0.9854709, -.0032804],
          [0.9906850, -.0025595],
          [0.9947532, -.0019938],
          [0.9976658, -.0015870],
          [0.9994161, -.0013419],
          [1.0000000, -.0012600]]             # trailing edge (bottom)

#--- RUN EXAMPLE --------------------------------------------------------------+

curve=airfoil(points,16,write=True) # pick even number of points so that the leading edge is defined by a single point...

#--- PLOT ---------------------------------------------------------------------+

from pylab import *
import matplotlib.pyplot as plt

xPts,yPts=zip(*points)
xPts2,yPts2=zip(*curve)
plot(xPts2,yPts2,'b')
plot(xPts,yPts,color='#666666')
plot(xPts,yPts,'o',mfc='none',mec='r',markersize=8)
plt.title('Composite Quadratic Bezier Curve Based Airfoil')
plt.xlim(-0.05,1.05)
plt.ylim(-0.55,0.55)
##plt.savefig('airfoil-final.png',dpi=72)
plt.show()

#--- END ----------------------------------------------------------------------+
